\# -*- coding: utf-8 -*-\# \# Configuration file for the Sphinx
documentation builder. \# \# This file does only contain a selection of
the most common options. For a \# full list see the documentation: \#
<http://www.sphinx-doc.org/en/stable/config>

\# -- Path setup
--------------------------------------------------------------

\# If extensions (or modules to document with autodoc) are in another
directory, \# add these directories to sys.path here. If the directory
is relative to the \# documentation root, use os.path.abspath to make it
absolute, like shown here. \# import os import sys sys.path.insert(0,
os.path.abspath('.')) import sphinx\_rtd\_theme import recommonmark

\# -- Project information
-----------------------------------------------------

project = u'Lichee zero' copyright = u'2018, Lichee Pi' author =
u'Lichee Pi'

\# The short X.Y version version = u'' \# The full version, including
alpha/beta/rc tags release = u''

\# -- General configuration
---------------------------------------------------

\# If your documentation needs a minimal Sphinx version, state it here.
\# \# needs\_sphinx = '1.0'

\# Add any Sphinx extension module names here, as strings. They can be
\# extensions coming with Sphinx (named 'sphinx.ext.\*') or your custom
\# ones. extensions = [ 'sphinx.ext.autodoc', 'sphinx.ext.napoleon',
'sphinx.ext.mathjax', ]

\# Add any paths that contain templates here, relative to this
directory. templates\_path = ['\_templates']

\# The suffix(es) of source filenames. \# You can specify multiple
suffix as a list of string: \# source\_suffix = ['.rst', '.md'] \#
source\_suffix = '.rst'

\# The master toctree document. master\_doc = 'index'

\# The language for content autogenerated by Sphinx. Refer to
documentation \# for a list of supported languages. \# \# This is also
used if you do content translation via gettext catalogs. \# Usually you
set "language" from the command line for these cases. language =
'zh\_CN' \# language = None

\# List of patterns, relative to source directory, that match files and
\# directories to ignore when looking for source files. \# This pattern
also affects html\_static\_path and html\_extra\_path .
exclude\_patterns = ['py\_tool', '\_build', 'build', 'Thumbs.db',
'.DS\_Store', '.vscode']

\# The name of the Pygments (syntax highlighting) style to use.
pygments\_style = 'sphinx'

\# -- Options for HTML output
-------------------------------------------------

\# The theme to use for HTML and HTML Help pages. See the documentation
for \# a list of builtin themes. \# html\_theme = 'sphinx\_rtd\_theme'
html\_theme\_path = [sphinx\_rtd\_theme.get\_html\_theme\_path()]

\# Theme options are theme-specific and customize the look and feel of a
theme \# further. For a list of options available for each theme, see
the \# documentation. \# \# html\_theme\_options = {}

\# Add any paths that contain custom static files (such as style sheets)
here, \# relative to this directory. They are copied after the builtin
static files, \# so a file named "default.css" will overwrite the
builtin "default.css". html\_static\_path = ['\_static']

\# Custom sidebar templates, must be a dictionary that maps document
names \# to template names. \# \# The default sidebars (for documents
that don't match any pattern) are \# defined by theme itself. Builtin
themes are using these templates by \# default:
`['localtoc.html', 'relations.html', 'sourcelink.html', # 'searchbox.html']`.
\# \# html\_sidebars = {}

\# -- Options for HTMLHelp output
---------------------------------------------

\# Output file base name for HTML help builder. htmlhelp\_basename =
'Licheezerodoc'

\# show the link to 'view page source' html\_show\_sourcelink = False

\# web favicon html\_favicon = u'\_static/icon/icon.png'

\# The name of an image file (relative to this directory) to place at
the top \# of the sidebar. html\_logo = u'\_static/icon/icon2.png'

\# -- Options for LaTeX output
------------------------------------------------

latex\_elements = {
:   \# The paper size ('letterpaper' or 'a4paper'). \# \# 'papersize':
    'letterpaper',

    \# The font size ('10pt', '11pt' or '12pt'). \# \# 'pointsize':
    '10pt',

    \# Additional stuff for the LaTeX preamble. \# \# 'preamble': '',

    \# Latex figure (float) alignment \# \# 'figure\_align': 'htbp',
    'preamble': r''' hypersetup{unicode=true} usepackage{CJKutf8}
    DeclareUnicodeCharacter{00A0}{nobreakspace}
    DeclareUnicodeCharacter{2203}{ensuremath{exists}}
    DeclareUnicodeCharacter{2200}{ensuremath{forall}}
    DeclareUnicodeCharacter{2286}{ensuremath{subseteq}}
    DeclareUnicodeCharacter{2713}{x}
    DeclareUnicodeCharacter{27FA}{ensuremath{Longleftrightarrow}}
    DeclareUnicodeCharacter{221A}{ensuremath{sqrt{}}}
    DeclareUnicodeCharacter{221B}{ensuremath{sqrt[3]{}}}
    DeclareUnicodeCharacter{2295}{ensuremath{oplus}}
    DeclareUnicodeCharacter{2297}{ensuremath{otimes}}
    begin{CJK}{UTF8}{gbsn} AtEndDocument{end{CJK}} ''',

}

\# Grouping the document tree into LaTeX files. List of tuples \#
(source start file, target name, title, \# author, documentclass [howto,
manual, or own class]). latex\_documents = [ (master\_doc,
'Licheezero.tex', u'Lichee zero Documentation', u'Lichee Pi', 'manual'),
]

\# -- Options for manual page output
------------------------------------------

\# One entry per manual page. List of tuples \# (source start file,
name, description, authors, manual section). man\_pages = [
(master\_doc, 'licheezero', u'Lichee zero Documentation', [author], 1) ]

\# -- Options for Texinfo output
----------------------------------------------

\# Grouping the document tree into Texinfo files. List of tuples \#
(source start file, target name, title, author, \# dir menu entry,
description, category) texinfo\_documents = [ (master\_doc,
'Licheezero', u'Lichee zero Documentation', author, 'Licheezero', 'One
line description of project.', 'Miscellaneous'), ]

\# added support for .md doc from recommonmark.parser import
CommonMarkParser from recommonmark.transform import AutoStructify
source\_parsers = { '.md': 'recommonmark.parser.CommonMarkParser', }
github\_doc\_root =
'<https://github.com/rtfd/recommonmark/tree/master/doc/>'

def setup(app):
:   app.add\_config\_value('recommonmark\_config', {
    :   'url\_resolver': lambda url: github\_doc\_root + url,
        'auto\_toc\_tree\_section': 'Contents', 'enable\_eval\_rst':
        True, 'enable\_auto\_doc\_ref': True,

    }, True) app.add\_transform(AutoStructify)
